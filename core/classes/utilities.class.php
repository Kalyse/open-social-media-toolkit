<?phpclass utilities {	var $db;			function utilities(&$db=NULL) {		// no db needed	}		/* time functions */	function timeStrToUnix($str) {		 // converts YYYYMMDDHHMMSS (MySQL TimeStamp) to unix timestamp		sscanf($str,"%4u%2u%2u%2u%2u%2u",$year,$month,$day,$hour,$min,$sec);        $newtstamp=mktime($hour,$min,$sec,$month,$day,$year);			return $newtstamp;	}		function timeStrToUnixModB($str) {		 // converts YYYY-MM-DD HH:MM:SS (MySQL TimeStamp) to unix timestamp		sscanf($str,"%4u-%2u-%2u %2u:%2u:%2u",$year,$month,$day,$hour,$min,$sec);        $newtstamp=mktime($hour,$min,$sec,$month,$day,$year);			return $newtstamp;	}	function time_since ($str_date='1970-01-01 00:00:00',$nominutes=false) {		$text=$this->date_diff($str_date,date("Y-m-d H:i:s"),$nominutes);		return $text;	}	function getMidnight($time) {		$midnight=date('Y-m-d',$time);		$midnight.=' 00:00:00';		return $midnight;	}		function getYesterday() {		$yesterday=time() - (24 * 60 * 60); // today - 24 hours		$yesterday=$this->getMidnight($yesterday); 		return $yesterday;	}		// The parameters of this function are the dates to be compared.	// The first should be prior to the second. The dates are in	// the form of: 1978-04-26 02:00:00. 	function date_diff($str_start, $str_end,$nominutes=false)	{				$str_start = strtotime($str_start); // The start date becomes a timestamp		$str_end = strtotime($str_end); // The end date becomes a timestamp				$nseconds = $str_end - $str_start; // Number of seconds between the two dates		$ndays = floor($nseconds / 86400); // One day has 86400 seconds		$nseconds = $nseconds % 86400; // The remainder from the operation		$nhours = floor($nseconds / 3600); // One hour has 3600 seconds		$nseconds = $nseconds % 3600;		$nminutes = floor($nseconds / 60); // One minute has 60 seconds, duh!		$nseconds = $nseconds % 60;		if ($ndays>1) 			$text=$ndays." days ";		else if ($ndays==1)			$text="1 day ";		else 			$text='';		if ($ndays<5) {			if ($nhours>1)				$text.=$nhours." hours ";			else if ($nhours==1)				$text.="1 hour ";			if (!$nominutes) {				if ($nminutes>1)					$text.=$nminutes." minutes";				else if ($nminutes==1)					$text.="1 minute ";			}			if ($text=='')				$text ='1 minute';		}		return $text;	} 		function shorten($string='', $length=250)	{		if ($string=='') return '';		// taken from SimplePie tutorials http://simplepie.org/wiki/tutorial/shorten_titles_and_descriptions	    // By default, an ellipsis will be appended to the end of the text.	    $suffix = '...';	 	    // Convert 'smart' punctuation to 'dumb' punctuation, strip the HTML tags,	    // and convert all tabs and line-break characters to single spaces.	    $short_desc = trim(str_replace(array("\r","\n", "\t"), ' ', strip_tags($string)));	 	    // Cut the string to the requested length, and strip any extraneous spaces 	    // from the beginning and end.	    $desc = trim(mb_substr($short_desc, 0, $length));	 	    // Find out what the last displayed character is in the shortened string	    $lastchar = mb_substr($desc, -1, 1);	    	 	    // If the last character is a period, an exclamation point, or a question 	    // mark, clear out the appended text.	    if ($lastchar == '.' || $lastchar == '!' || $lastchar == '?') $suffix='';	 	    // Append the text.	    $desc .= $suffix;	 	    // Send the new description back to the page.	    return $desc;	}	function ellipsis($str='',$cnt=250) {		// adds an ellipsis past the nth char where n=$cnt		if (strlen($str)>$cnt) {			$str=mb_substr($str,0,($cnt-1)).'...';		}		return $str;				}	function encodeCleanString($str,$cnt) {		return urlencode(substr(strip_tags($str), 0, ($cnt - 1)));	}		function encodeUrl($url='') {		return urlencode($url);	}			}?>