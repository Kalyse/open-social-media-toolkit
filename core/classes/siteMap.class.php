<?phpclass siteMap {	// class for building google site map file	/* example usage		require_once(PATH_SITE.'/classes/siteMap.class.php');		// instantiate the class object		$siteMapObj=new siteMap();		// you must build the individual maps first		// I set up different maps according to the most frequent changing content of my site		// You can set up your maps any way that you want		// map to all the content from the last hour		$siteMapObj->buildMap('hourly');		// map to all the content from the last day		$siteMapObj->buildMap('daily');		// map to all the content from the last week, etc.		$siteMapObj->buildMap('weekly');				// call buildIndexMap after updating any individual child maps above		// just the time stamps from each individual map file are updated in the indexmap		// warning: if a individual map hasn't been built - the index map won't include a reference to it		$siteMapObj->buildIndexMap();	*/	var $db;				function siteMap(&$db=NULL) {		if (is_null($db)) { 			require_once(PATH_CORE.'/classes/db.class.php');			$this->db=new cloudDatabase();		} else			$this->db=&$db;	}	function buildIndexMap() {		// build the parent or Index map		// this will just list the child maps and their modification dates				if (isset($_GET['test'])) $force=true;				// if maps have never been built, build them 	    if (!file_exists(PATH_SITE.'/map_daily.xml') OR $force) { 	    	$this->buildMap('daily'); 	    } 	    if (!file_exists(PATH_SITE.'/map_hourly.xml') OR $force) { 	    	$this->buildMap('hourly'); 	    } 	    if (!file_exists(PATH_SITE.'/map_weekly.xml') OR $force) { 	    	$this->buildMap('weekly'); 	    }	    if (!file_exists(PATH_SITE.'/map_monthly.xml') OR $force) { 	    	$this->buildMap('monthly'); 	    }	    if (!file_exists(PATH_SITE.'/map_all.xml') OR $force) { 	    	$this->buildMap('all'); 	    }   	    		$FILE = fopen (PATH_SITE.'/sitemap.xml', "w");		$text='<?xml version="1.0" encoding="UTF-8"?>';		$text.='<sitemapindex xmlns="http://www.google.com/schemas/sitemap/0.84"	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"	xsi:schemaLocation="http://www.google.com/schemas/sitemap/0.84	http://www.google.com/schemas/sitemap/0.84/siteindex.xsd">';		$text.=$this->addChildMap(URL_HOME.'/map_hourly.xml',PATH_SITE.'/map_hourly.xml');		$text.=$this->addChildMap(URL_HOME.'/map_daily.xml',PATH_SITE.'/map_daily.xml');		$text.=$this->addChildMap(URL_HOME.'/map_weekly.xml',PATH_SITE.'/map_weekly.xml');		$text.=$this->addChildMap(URL_HOME.'/map_monthly.xml',PATH_SITE.'/map_monthly.xml');		$text.=$this->addChildMap(URL_HOME.'/map_all.xml',PATH_SITE.'/map_all.xml');		$text.='</sitemapindex>';		fwrite ($FILE, $text);		fclose ($FILE);		// notify Google that we've updated the index map		// you don't have to notify them of the child map updates		//$this->pingGoogle();    }    	function buildMap($mapName='core')	{		// build a child map based on $mapName		$text='<?xml version="1.0" encoding="UTF-8"?>';		$text.='<urlset  xmlns="http://www.google.com/schemas/sitemap/0.84"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  xsi:schemaLocation="http://www.google.com/schemas/sitemap/0.84                      http://www.google.com/schemas/sitemap/0.84/sitemap.xsd">';        // choose which child map to build        switch ($mapName) {        	case 'hourly':        		$filename='map_hourly.xml';				$text.=$this->addURL(URL_HOME.'?p=home','1.0','always');       				$text.=$this->addURL(URL_HOME.'?p=upcoming','0.9','hourly');				$text.=$this->addURL(URL_HOME.'?p=newswire','0.9','hourly');       	    		// stories from the past hour	    		$text.=$this->buildStories(0,1,'0.9','hourly');        	break;        	case 'daily':        		$filename='map_daily.xml';				$text.=$this->addURL(URL_HOME.'?p=resources','0.9','weekly');               		        		        		// stories from the past day				$text.=$this->buildStories(1,24,'0.9','hourly');        	break;        	case 'weekly':        		$filename='map_weekly.xml';        		// stories from the past week				$text.=$this->buildStories(24,168,'0.8','daily');        	break;        	case 'monthly':        		$filename='map_monthly.xml';        		// stories from the past 5 weeks				$text.=$this->buildStories(168,(35*7),'0.7','weekly');        	break;        	case 'all':        		$filename='map_all.xml';        		// build evergreen links				$text.=$this->addURL(URL_HOME.'?p=about','0.7','weekly');				$text.=$this->addURL(URL_HOME.'?p=signin','0.1','weekly');               		        		        	break;        }        $text.='</urlset>';		$FILE = fopen (PATH_SITE.'/'.$filename, "w");			fwrite ($FILE, $text);		fclose ($FILE);	}	    function addChildMap($loc,$filename) {    	// build a child map xml entry for the Index map file    	if (file_exists($filename)) {	    	$text='<sitemap>';	    	$text.='<loc>'.$loc.'</loc>';    		// look up last modified time for the file and convert to w3c     		// to do: php 4 doesn't have P format for grenwich mean time difference, so -07:00 is for west coast, changes with daylight savings	    	$text.='<lastmod>'.date ("Y-m-d\TH:i:s", filemtime($filename)).'-07:00</lastmod>';	    	$text.='</sitemap>';	    	return $text;    	} else     		return '';    }      	function buildStories($olderThan=24,$newerThan=192,$priority='0.7',$refresh='daily') {		$temp='';		$this_query = $this->db->query("SELECT permalink FROM Content WHERE date < date_sub(NOW(), INTERVAL $olderThan HOUR) AND date > date_sub(NOW(), INTERVAL $newerThan HOUR) ORDER BY date DESC;");        				while ($data=$this->db->readQ($this_query)) {			$temp.=$this->addURL(URL_HOME.'?p=readStory&permalink='.$data->permalink,$priority,$refresh);       		}			return $temp;	}       	function addURL($url='/',$priority='0.5',$freq='daily') {		// build a single url to add to the current child map file		$url=str_replace("&","&amp;",$url);		$code='<url><loc>'.$url.'</loc><priority>'.$priority.'</priority><changefreq>'.$freq.'</changefreq></url>';		return $code;	}    		function pingGoogle() {		// pings google that we've updated our sitemap index file		// PHP4 requires PEAR Libraries on your server		// require_once "HTTP/Request.php";		$googleNode="http://www.google.com/webmasters/sitemaps/ping?sitemap=".URL_HOME."sitemap.xml";				try {						$handle = fopen($googleNode, "rb");						$resp = stream_get_contents($handle);						/*					PHP 4.x version				$resp = '';				while (!feof($handle)) {				  $resp .= fread($handle, 8192);				}			*/			fclose($handle);					} catch (Exception $e) {			echo 'Caught exception: '.  $e->getMessage(). "\n";			return false;		}		/*			$req =& new HTTP_Request($googleNode);			$req->addHeader("User-Agent", SITE_TITLE);			$response = $req->sendRequest();			if (PEAR::isError($response)) {				echo 'Google SiteMap error';				return FALSE;			} else {				echo 'Google SiteMap Submitted<br/>';				$resp=$req->getResponseBody();				return $result;			}		*/	}		}?>